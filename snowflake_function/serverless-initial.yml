service: sagemaker-invoke-api

provider:
  name: aws
  runtime: python3.8

plugins:
  - serverless-python-requirements
  - serverless-pseudo-parameters

custom:
  external_function_role: SnowflakeExternalFunctionExecutionRoleSagemaker

functions:
  sagemaker-invoke:
    handler: sagemaker-invoke.lambda_handler
    events:
      - http:
          path: /
          method: post
          authorizer: aws_iam

resources:
  Resources:
    SnowflakeExternalFunctionExecutionRoleSagemaker:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Principal:
                AWS:
                  - Fn::Join:
                    - ''
                    - - 'arn:aws:iam::'
                      - Ref: 'AWS::AccountId'
                      - ':root'
              Action:
                - "sts:AssumeRole"
        RoleName: ${self:custom.external_function_role}
        Path: "/"
  Outputs:
    SnowflakeExternalFunctionExecutionRoleSagemaker:
      Value: !GetAtt SnowflakeExternalFunctionExecutionRoleSagemaker.Arn